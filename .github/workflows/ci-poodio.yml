name: CI for poodio

concurrency:
    group: ${{ github.workflow }}-${{ github.ref }}
    cancel-in-progress: true

on:
    push:
        branches: ["main"]
        tags: ["poodio@v[0-9]+.[0-9]+.[0-9]+"]
    pull_request:
        branches: ["main"]

env:
    CARGO_TERM_COLOR: always

jobs:
    check:
        runs-on: ubuntu-latest
        steps:
            - uses: actions/checkout@v4
              with:
                  fetch-depth: 1
            - uses: actions/cache@v4
              with:
                  key: ${{ runner.os }}-${{ runner.arch }}-${{ hashFiles('**/Cargo.lock') }}
                  path: |
                      ~/.cargo/registry
                      ~/.cargo/git
                      target
            # - uses: dtolnay/rust-toolchain@stable
            #   with:
            #       components: clippy, rustfmt
            - uses: taiki-e/install-action@v2
              with:
                  tool: cargo-outdated
            - run: cargo outdated --exit-code 34
            - run: cargo fmt --all -- --check
            - run: cargo clippy --all-features -- -D warnings
            - run: cargo test --all-features

    create-github-release:
        if: github.ref_type == 'tag'
        needs: check
        runs-on: ubuntu-latest
        permissions:
            contents: write
        steps:
            - uses: actions/checkout@v4
              with:
                  fetch-depth: 1
            - run: gh release create ${{ github.ref_name }} --generate-notes
              env:
                  GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

    build-github-release:
        if: github.ref_type == 'tag'
        needs: create-github-release
        runs-on: ${{ matrix.os }}
        permissions:
            contents: write
        strategy:
            matrix:
                include:
                    - os: ubuntu-latest
                      target: x86_64-unknown-linux-gnu
                      artifact: poodio
                    - os: windows-latest
                      target: x86_64-pc-windows-msvc
                      artifact: poodio.exe
                    - os: macos-latest
                      target: aarch64-apple-darwin
                      artifact: poodio
        steps:
            - uses: actions/checkout@v4
              with:
                  fetch-depth: 1
            - uses: actions/cache@v4
              with:
                  key: ${{ runner.os }}-${{ runner.arch }}-${{ hashFiles('**/Cargo.lock') }}
                  path: |
                      ~/.cargo/registry
                      ~/.cargo/git
                      target
            - run: cargo build --locked --release --target ${{ matrix.target }}
            - run: gh release upload ${{ github.ref_name }}
                  target/${{ matrix.target }}/release/\
                  ${{ matrix.artifact }}#${{ matrix.artifact }}-${{ matrix.target }}
              env:
                  GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
