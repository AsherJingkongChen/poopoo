name: CI

concurrency:
    group: ${{ github.workflow }}-${{ github.ref }}
    cancel-in-progress: true

on:
    push:
        branches: ["main"]
        tags: ["[a-z0-9]+@[0-9]+.[0-9]+.[0-9]+-?*"]
    pull_request:
        branches: ["main"]

env:
    CARGO_TERM_COLOR: always

jobs:
    check:
        runs-on: macos-latest
        steps:
            - uses: actions/checkout@v4
            - uses: taiki-e/install-action@v2
              with:
                  tool: cargo-audit, cargo-outdated, just
            - run: just prepare check
            - run: just audit
              if: github.ref_type == 'tag'

    build-poodio:
        # if: startsWith(github.ref, 'refs/tags/poodio@')
        runs-on: ${{ matrix.os }}
        strategy:
            fail-fast: false
            matrix:
                include:
                    - os: macos-15
                      target: aarch64-apple-darwin
                      test: e2e-bin e2e-npm
                    - os: macos-13
                      target: x86_64-apple-darwin
                      test: e2e-bin e2e-npm
                    - os: ubuntu-24.04-arm
                      target: aarch64-unknown-linux-gnu
                      test: e2e-bin e2e-npm
                    # - os: ubuntu-24.04-arm
                    #   target: aarch64-unknown-linux-musl
                    #   test:
                    - os: ubuntu-24.04
                      target: i686-unknown-linux-gnu
                      test: e2e-bin
                    - os: ubuntu-24.04
                      target: x86_64-unknown-linux-gnu
                      test: e2e-bin e2e-npm
                    # - os: ubuntu-24.04
                    #   target: x86_64-unknown-linux-musl
                    #   test:
                    - os: windows-2025
                      target: aarch64-pc-windows-msvc
                      test:
                    - os: windows-2025
                      target: i686-pc-windows-msvc
                      test: e2e-bin
                    - os: windows-2025
                      target: x86_64-pc-windows-msvc
                      test: e2e-bin e2e-npm
        steps:
            - uses: actions/checkout@v4
            - uses: taiki-e/setup-cross-toolchain-action@v1
              with:
                  target: ${{ matrix.target }}
            - name: Set up Ubuntu Linux
              if: startsWith(matrix.os, 'ubuntu-')
              run: |
                  sudo apt-get update
                  sudo apt-get install -y libasound2-dev
            - uses: taiki-e/install-action@v2
              with:
                  tool: just
            - name: Cache cargo dependencies
              uses: actions/cache@v4
              with:
                  path: |
                      ~/.cargo/bin/
                      ~/.cargo/registry/index/
                      ~/.cargo/registry/cache/
                      ~/.cargo/git/db/
                      target/
                  key: cargo-${{ runner.os }}-${{ matrix.target }}-${{ hashFiles('**/Cargo.lock') }}
                  restore-keys: |
                      cargo-${{ runner.os }}-${{ matrix.target }}-
                      cargo-${{ runner.os }}-
            - name: Cache npm dependencies
              uses: actions/cache@v4
              with:
                  path: ~/.npm
                  key: npm-${{ runner.os }}-${{ hashFiles('**/package-lock.json') }}
                  restore-keys: |
                      npm-${{ runner.os }}-
            - run: just prepare poodio::build "${{ matrix.target }}"
            - run: just poodio::test "${{ matrix.test }}"
              if: matrix.test
            - uses: actions/upload-artifact@v4
              with:
                  name: ${{ matrix.target }}
                  path: poodio/dist/

    publish-poodio:
        if: startsWith(github.ref, 'refs/tags/poodio@')
        needs:
            - check
            - build-poodio
        runs-on: macos-latest
        permissions:
            attestations: write
            contents: write
            id-token: write
        steps:
            - uses: actions/checkout@v4
              with:
                  fetch-depth: 0
                  fetch-tags: true
            - uses: actions/download-artifact@v4
              with:
                  path: dist/
            - name: Publish to github.com (Packaging)
              id: github-pack
              run: |
                  for dir in dist/*; do
                    TARGET="$(basename "$dir")"
                    ASSET="${{ github.ref_name }}-$TARGET.tgz"
                    cd "$dir/bin/"
                    echo "Packaging $ASSET ..."
                    tar -vczf "$ASSET" *
                    cd - > /dev/null
                  done

                  LAST_TAG="$(git describe --tags --abbrev=0 HEAD~)"
                  HEAD_TAG="${{ github.ref_name }}"
                  GITHUB_REPO_URL="${{ github.server_url }}/${{ github.repository }}"
                  CHANGELOG="$GITHUB_REPO_URL/compare/$LAST_TAG...$HEAD_TAG"
                  CONTRIBUTORS="$(git log --pretty=format:'  + @%an' "$LAST_TAG".."$HEAD_TAG" | sort -u)"
                  INSTALLATION="$GITHUB_REPO_URL/tree/$HEAD_TAG/poodio#install"

                  echo "changelog=$CHANGELOG" >> $GITHUB_OUTPUT
                  echo "contributors=$CONTRIBUTORS" >> $GITHUB_OUTPUT
                  echo "installation=$INSTALLATION" >> $GITHUB_OUTPUT
            - name: Publish to github.com (Attestation)
              id: github-attest
              uses: actions/attest-build-provenance@v2
              with:
                  subject-path: dist/*/bin/*.tgz
            - name: Publish to github.com
              uses: softprops/action-gh-release@v2
              with:
                  body: |
                      - [**Changelog**](${{ steps.github-pack.outputs.changelog }})
                      - [**Attestation**](${{ steps.github-attest.outputs.attestation-url }})
                      - [**Installation**](${{ steps.github-pack.outputs.installation }})
                      - **Contributors**
                      ${{ steps.github-pack.outputs.contributors }}
                  files: dist/*/bin/*.tgz
            - name: Publish to npmjs.com
              run: |
                  npm set //registry.npmjs.org/:_authToken "$NODE_AUTH_TOKEN"
                  npm publish "$(set -- dist/*; echo "$1")/npm/wrap/"
                  for pkg in dist/*; do npm publish "./$pkg/npm/bind/"; done
                  npm set //registry.npmjs.org/:_authToken
              env:
                  NODE_AUTH_TOKEN: ${{ secrets.POODIO_NPMJS_TOKEN }}
            - name: Publish to crates.io
              run: cargo publish --locked --package poodio --no-verify --verbose
              env:
                  CARGO_REGISTRY_TOKEN: ${{ secrets.POODIO_CRATE_TOKEN }}
