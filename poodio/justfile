build TARGET:
    @just \
        build-bin '{{ TARGET }}' \
        build-npm '{{ TARGET }}' \
        build-pip '{{ TARGET }}'

build-bin TARGET:
    @rm -rf '{{ DIST_BIN }}'
    cargo build --bin poodio --locked --release --target '{{ TARGET }}'
    @mkdir -p '{{ DIST_BIN }}'
    cp '../target/{{ TARGET }}/release/{{ BIN_NAME }}' '{{ BIN_PATH }}'

build-npm TARGET:
    @rm -rf '{{ DIST_NPM }}'
    npx napi build --cargo-flags='--locked --lib' --no-dts-header --release \
        --features bind-napi --target '{{ TARGET }}' '{{ DIST_NPM }}bind/'
    cp '{{ DIST_NPM }}bind/index.d.ts' '{{ DIST_NPM }}wrap/'
    @printf '{{ NPM_DIST_PURE_MAIN_DATA }}' > '{{ DIST_NPM }}wrap/index.js'
    chmod +x '{{ DIST_NPM }}wrap/index.js'

build-pip TARGET:
    @rm -rf '{{ DIST_PIP }}'
    uv run --no-sync maturin build --bindings pyo3 --locked --release \
        --features bind-pyo3 --target '{{ TARGET }}' --out '{{ DIST_PIP }}'

test-e2e:
    @just \
        test-e2e-bin \
        test-e2e-npm \
        test-e2e-pip \
    && echo '[PASS] test-e2e'

test-e2e-bin:
    @[[ -x '{{ BIN_PATH }}' && ! -d '{{ BIN_PATH }}' ]] || \
        (echo '[FAIL] permission' && exit 2)
    @[[ "$('{{ BIN_PATH }}' --version)" == "{{ VERS }}" ]] || \
        (echo '[FAIL] --version' && exit 2)

    @echo '[PASS] test-e2e-bin'

test-e2e-npm:
    @npm install --no-save --silent '{{ DIST_NPM }}'*

    @[[ "$(npx --no poodio -- --version)" == "{{ VERS }}" ]] || \
        (echo '[FAIL] --version' && exit 2)
    @[[ "$(node --print 'require("poodio").version()')" == "{{ VERS }}" ]] || \
        (echo '[FAIL] .version()' && exit 2)
    @npm prune --silent
    @echo '[PASS] test-e2e-npm'

test-e2e-pip:
    @uv pip install --reinstall --quiet '{{ DIST_PIP }}'*

    @[[ "$(uv run --no-sync python -c 'import poodio as p;print(p.version())')" == "{{ VERS }}" ]] || \
        (echo '[FAIL] .version()' && exit 2)
    @# TODO: --version

    @uv pip uninstall --quiet poodio
    @echo '[PASS] test-e2e-pip'

BIN_NAME := 'poodio' + if os() == 'windows' { '.exe' } else { '' }
BIN_PATH := DIST_BIN + BIN_NAME
DIST_BIN := 'dist/bin/'
DIST_NPM := 'dist/npm/'
DIST_PIP := 'dist/pip/'
NPM_DIST_PURE_MAIN_DATA := '''
#! /usr/bin/env node
require("tell-libc");
const { name } = require("./package.json");
const { argv, arch, platform, libc } = require("process");
module.exports = require(`@${name}/${name}-${arch}-${platform}-${libc || "unknown"}`);
require.main === module && module.exports.main(argv.slice(1));
'''
VERS := '$(cargo pkgid -p poodio | sed -E "s|.+/(.+)#|\1@|")'
